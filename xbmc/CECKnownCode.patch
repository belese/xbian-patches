diff --git a/xbmc/ApplicationMessenger.cpp b/xbmc/ApplicationMessenger.cpp
index 5ab05fd..bd30eb4 100644
--- a/xbmc/ApplicationMessenger.cpp
+++ b/xbmc/ApplicationMessenger.cpp
@@ -270,6 +270,12 @@ void CApplicationMessenger::ProcessMessage(ThreadMessage *pMsg)
       }
       break;

+    case TMSG_QUITWAIT:
+      {
+        g_application.Stop(EXITCODE_QUITWAIT);
+      }
+      break;
+
     case TMSG_HIBERNATE:
       {
         g_PVRManager.SetWakeupCommand();
@@ -1105,6 +1111,12 @@ void CApplicationMessenger::Shutdown()
   SendMessage(tMsg);
 }

+void CApplicationMessenger::QuitWait()
+{
+  ThreadMessage tMsg = {TMSG_QUITWAIT};
+  SendMessage(tMsg);
+}
+
 void CApplicationMessenger::Powerdown()
 {
   ThreadMessage tMsg = {TMSG_POWERDOWN};
diff --git a/xbmc/XBApplicationEx.h b/xbmc/XBApplicationEx.h
index 2cb42e5..bf8a054 100644
--- a/xbmc/XBApplicationEx.h
+++ b/xbmc/XBApplicationEx.h
@@ -29,6 +29,7 @@ enum {
   EXITCODE_POWERDOWN = 64,
   EXITCODE_RESTARTAPP= 65,
   EXITCODE_REBOOT    = 66,
+  EXITCODE_QUITWAIT  = 50,
 };

 class CXBApplicationEx : public IWindowManagerCallback
diff --git a/xbmc/peripherals/devices/PeripheralCecAdapter.cpp b/xbmc/peripherals/devices/PeripheralCecAdapter.cpp
index 386d3e4..2ce0375 100644
--- a/xbmc/peripherals/devices/PeripheralCecAdapter.cpp
+++ b/xbmc/peripherals/devices/PeripheralCecAdapter.cpp
@@ -624,7 +624,7 @@ int CPeripheralCecAdapter::CecCommand(void *cbParam, const cec_command command)
     case CEC_OPCODE_STANDBY:
       /* a device was put in standby mode */
       if (command.initiator == CECDEVICE_TV &&
-          (adapter->m_configuration.bPowerOffOnStandby == 1 || adapter->m_configuration.bShutdownOnStandby == 1) &&
+          (adapter->m_configuration.bPowerOffOnStandby == 1 || adapter->m_configuration.bShutdownOnStandby == 1 || adapter->m_configuration.bPowerOffOnStandby == 2 ) &&
           (!adapter->m_screensaverLastActivated.IsValid() || CDateTime::GetCurrentDateTime() - adapter->m_screensaverLastActivated > CDateTimeSpan(0, 0, 0, SCREENSAVER_TIMEOUT)))
       {
         adapter->m_bStarted = false;
@@ -632,6 +632,8 @@ int CPeripheralCecAdapter::CecCommand(void *cbParam, const cec_command command)
           CApplicationMessenger::Get().Suspend();
         else if (adapter->m_configuration.bShutdownOnStandby == 1)
           CApplicationMessenger::Get().Shutdown();
+        else if (adapter->m_configuration.bPowerOffOnStandby == 2)
+          CApplicationMessenger::Get().QuitWait();
       }
       break;
     case CEC_OPCODE_SET_MENU_LANGUAGE: