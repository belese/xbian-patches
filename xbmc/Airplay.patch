diff --git a/xbmc/network/AirPlayServer.cpp b/xbmc/network/AirPlayServer.cpp
index 28e8075..e39d917 100644
--- a/xbmc/network/AirPlayServer.cpp
+++ b/xbmc/network/AirPlayServer.cpp
@@ -153,6 +153,7 @@ void CAirPlayServer::Announce(AnnouncementFlag flag, const char *sender, const c
   {
     if (strcmp(message, "OnStop") == 0)
     {
+      restoreVolume();
       ServerInstance->AnnounceToClients(EVENT_STOPPED);
     }
     else if (strcmp(message, "OnPlay") == 0)
@@ -255,6 +256,7 @@ void CAirPlayServer::AnnounceToClients(int state)
   m_nonlocal = nonlocal;
   m_ServerSocket = INVALID_SOCKET;
   m_usePassword = false;
+  m_origVolume = -1;
   CAnnouncementManager::AddAnnouncer(this);
 }
 
@@ -680,6 +682,23 @@ bool CAirPlayServer::CTCPClient::checkAuthorization(const CStdString& authStr,
   return m_bAuthenticated;
 }
 
+void CAirPlayServer::backupVolume()
+{
+  if (ServerInstance->m_origVolume == -1)
+    ServerInstance->m_origVolume = g_application.GetVolume();
+}
+
+void CAirPlayServer::restoreVolume()
+{
+  if (ServerInstance->m_origVolume != -1)
+  {
+    float oldVolume = g_application.GetVolume();
+    g_application.SetVolume((float)ServerInstance->m_origVolume);
+    CApplicationMessenger::Get().ShowVolumeBar(oldVolume < (float)ServerInstance->m_origVolume);
+    ServerInstance->m_origVolume = -1;
+  }
+}
+
 int CAirPlayServer::CTCPClient::ProcessRequest( CStdString& responseHeader,
                                                 CStdString& responseBody)
 {
@@ -767,6 +786,7 @@ int CAirPlayServer::CTCPClient::ProcessRequest( CStdString& responseHeader,
         volume *= 100;
         if(oldVolume != (int)volume)
         {
+          backupVolume();
           g_application.SetVolume(volume);          
           CApplicationMessenger::Get().ShowVolumeBar(oldVolume < volume);
         }
diff --git a/xbmc/network/AirPlayServer.h b/xbmc/network/AirPlayServer.h
index 6dcf741..a830aff 100644
--- a/xbmc/network/AirPlayServer.h
+++ b/xbmc/network/AirPlayServer.h
@@ -48,6 +48,8 @@ class CAirPlayServer : public CThread, public ANNOUNCEMENT::IAnnouncer
   static void StopServer(bool bWait);
   static bool SetCredentials(bool usePassword, const CStdString& password);
   static bool IsPlaying(){ return m_isPlaying > 0;}
+  static void backupVolume();
+  static void restoreVolume();
   static int m_isPlaying;
 
 protected:
@@ -107,6 +109,7 @@ class CAirPlayServer : public CThread, public ANNOUNCEMENT::IAnnouncer
   bool m_nonlocal;
   bool m_usePassword;
   CStdString m_password;
+  int m_origVolume;
 
   static CAirPlayServer *ServerInstance;
 };
diff --git a/xbmc/network/AirTunesServer.cpp b/xbmc/network/AirTunesServer.cpp
index 49121fe..6e4cfdb 100644
--- a/xbmc/network/AirTunesServer.cpp
+++ b/xbmc/network/AirTunesServer.cpp
@@ -46,11 +46,13 @@
 #include "settings/AdvancedSettings.h"
 #include "utils/EndianSwap.h"
 #include "URL.h"
+#include "interfaces/AnnouncementManager.h"
 
 #include <map>
 #include <string>
 
 using namespace XFILE;
+using namespace ANNOUNCEMENT;
 
 #if defined(TARGET_WINDOWS)
 DllLibShairplay *CAirTunesServer::m_pLibShairplay = NULL;
@@ -93,6 +95,16 @@ void CAirTunesServer::SetMetadataFromBuffer(const char *buffer, unsigned int siz
   CApplicationMessenger::Get().SetCurrentSongTag(tag);
 }
 
+void CAirTunesServer::Announce(AnnouncementFlag flag, const char *sender, const char *message, const CVariant &data)
+{
+  if ( (flag & Player) && strcmp(sender, "xbmc") == 0 && strcmp(message, "OnStop") == 0)
+  {
+#ifdef HAS_AIRPLAY
+    CAirPlayServer::restoreVolume();
+#endif
+  }
+}
+
 void CAirTunesServer::SetCoverArtFromBuffer(const char *buffer, unsigned int size)
 {
   XFILE::CFile tmpFile;
@@ -192,6 +204,9 @@ void  CAirTunesServer::AudioOutputFunctions::audio_set_volume(void *cls, void *s
 {
   //volume from -30 - 0 - -144 means mute
   float volPercent = volume < -30.0f ? 0 : 1 - volume/-30;
+#ifdef HAS_AIRPLAY
+  CAirPlayServer::backupVolume();
+#endif
   g_application.SetVolume(volPercent, false);//non-percent volume 0.0-1.0
 }
 
@@ -563,6 +578,7 @@ void CAirTunesServer::StopServer(bool bWait)
 #else
   m_pLibShairport = new DllLibShairport();
 #endif
+  CAnnouncementManager::AddAnnouncer(this);
 }
 
 CAirTunesServer::~CAirTunesServer()
@@ -581,6 +597,7 @@ void CAirTunesServer::StopServer(bool bWait)
   }
   delete m_pLibShairport;
 #endif
+  CAnnouncementManager::RemoveAnnouncer(this);
 }
 
 void CAirTunesServer::Process()
diff --git a/xbmc/network/AirTunesServer.h b/xbmc/network/AirTunesServer.h
index 62ff7f0..88cb43d 100644
--- a/xbmc/network/AirTunesServer.h
+++ b/xbmc/network/AirTunesServer.h
@@ -41,13 +41,16 @@
 #include "utils/HttpParser.h"
 #include "utils/StdString.h"
 #include "filesystem/PipeFile.h"
+#include "interfaces/IAnnouncer.h"
 
 class DllLibShairport;
 
 
-class CAirTunesServer : public CThread
+class CAirTunesServer : public CThread, public ANNOUNCEMENT::IAnnouncer
 {
 public:
+  virtual void Announce(ANNOUNCEMENT::AnnouncementFlag flag, const char *sender, const char *message, const CVariant &data);
+
   static bool StartServer(int port, bool nonlocal, bool usePassword, const CStdString &password="");
   static void StopServer(bool bWait);
   static void SetMetadataFromBuffer(const char *buffer, unsigned int size);
diff --git a/tools/depends/target/libshairport/012_add_volume_control.patch b/tools/depends/target/libshairport/012_add_volume_control.patch
new file mode 100644
index 0000000..c036b94
--- /dev/null
+++ b/tools/depends/target/libshairport/012_add_volume_control.patch
@@ -0,0 +1,28 @@
+--- src/ao.h	2013-03-14 19:07:04.000000000 +0100
++++ src/ao.h	2013-03-14 20:45:15.000000000 +0100
+@@ -141,6 +141,7 @@
+ 
+ #endif  /* __AO_H__ */
+ 
++#define SHAIRPORT_AUDIOOUTPUT_VERSION 2
+ extern struct AudioOutput g_ao;
+ struct AudioOutput                                                                                                                                                                                              
+   {                                                                                                                                                                                                              
+@@ -155,4 +156,5 @@
+       char* (*ao_get_option)(ao_option *, const char* );
+       void (*ao_set_metadata)(const char *buffer, unsigned int size);                                                                                                                                                         
+       void (*ao_set_metadata_coverart)(const char *buffer, unsigned int size);
++      void (*ao_set_volume)(float volume);
+   }; 
+diff -uPr orig/src/hairtunes.c macosx10.6_i386-target/src/hairtunes.c
+--- src/hairtunes.c	2013-03-14 19:07:04.000000000 +0100
++++ src/hairtunes.c	2013-03-14 20:46:33.000000000 +0100
+@@ -265,6 +265,8 @@
+   assert(f<=0);
+   if (debug)
+       xprintf("VOL: %lf\n", f);
++  if (g_ao.ao_set_volume)
++    g_ao.ao_set_volume(f);
+   volume = pow(10.0,0.05*f);
+   fix_volume = 65536.0 * volume;
+ }
diff --git a/tools/depends/target/libshairport/Makefile b/tools/depends/target/libshairport/Makefile
index bb553bf..03016ca 100644
--- a/tools/depends/target/libshairport/Makefile
+++ b/tools/depends/target/libshairport/Makefile
@@ -36,6 +36,7 @@ $(PLATFORM): $(TARBALLS_LOCATION)/$(ARCHIVE) $(DEPS)
 	cd $(PLATFORM); patch -p0 < ../010_handle_metadata.patch
 	cd $(PLATFORM); patch -p0 < ../011_fix_ipv4_fallback.patch
 	cd $(PLATFORM); patch -p0 < ../android.patch
+	cd $(PLATFORM); patch -p0 < ../012_add_volume_control.patch
 	cd $(PLATFORM); $(AUTORECONF) -vif
 	cd $(PLATFORM); $(CONFIGURE)
diff --git a/xbmc/network/AirTunesServer.cpp b/xbmc/network/AirTunesServer.cpp
index 49121fe..9973c78 100644
--- a/xbmc/network/AirTunesServer.cpp
+++ b/xbmc/network/AirTunesServer.cpp
@@ -288,6 +288,17 @@ void CAirTunesServer::AudioOutputFunctions::ao_initialize(void)
 {
 }
 
+void  CAirTunesServer::AudioOutputFunctions::ao_set_volume(float volume)
+{
+  //volume from -30 - 0 - -144 means mute
+  float volPercent = volume < -30.0f ? 0 : 1 - volume/-30;
+#ifdef HAS_AIRPLAY
+  CAirPlayServer::backupVolume();
+#endif
+  g_application.SetVolume(volPercent, false);//non-percent volume 0.0-1.0
+}
+
+
 int CAirTunesServer::AudioOutputFunctions::ao_play(ao_device *device, char *output_samples, uint32_t num_bytes)
 {
   if (!device)
@@ -676,6 +687,11 @@ bool CAirTunesServer::Initialize(const CStdString &password)
     ao.ao_set_metadata = AudioOutputFunctions::ao_set_metadata;    
     ao.ao_set_metadata_coverart = AudioOutputFunctions::ao_set_metadata_coverart;        
 #endif
+#if defined(SHAIRPORT_AUDIOOUTPUT_VERSION)
+#if   SHAIRPORT_AUDIOOUTPUT_VERSION >= 2
+    ao.ao_set_volume = AudioOutputFunctions::ao_set_volume;
+#endif
+#endif
     struct printfPtr funcPtr;
     funcPtr.extprintf = shairport_log;
 
diff --git a/xbmc/network/AirTunesServer.h b/xbmc/network/AirTunesServer.h
index 62ff7f0..3525133 100644
--- a/xbmc/network/AirTunesServer.h
+++ b/xbmc/network/AirTunesServer.h
@@ -86,6 +86,7 @@ class CAirTunesServer : public CThread
       static void  audio_destroy(void *cls, void *session);
 #else
       static void ao_initialize(void);
+      static void ao_set_volume(float volume);
       static int ao_play(ao_device *device, char *output_samples, uint32_t num_bytes);
       static int ao_default_driver_id(void);
       static ao_device* ao_open_live( int driver_id, ao_sample_format *format,
